name: buildx

on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+

jobs:
  publish:
    name: Publish image
    runs-on: ubuntu-latest
    steps:

    - id: env
      run: | 
        echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '.git' '{print tolower($1)}')" >> $GITHUB_ENV
        echo "GITHUB_CONTAINER_REGISTRY_IMAGE=ghcr.io/$(echo '${{ github.repository }}' | awk -F '.git' '{print tolower($1)}')" >> $GITHUB_ENV
      shell: bash

    - name: Check out repository
      uses: actions/checkout@v2

    - name: Generate image metadata
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ env.GITHUB_CONTAINER_REGISTRY_IMAGE  }}
        tag-sha: true
        tag-semver: "{{version}}"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log into GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and publish image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: |
          linux/amd64
        tags: |
          ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Digest: `${{ steps.docker_build.outputs.digest }}`
          Tags:
          ```text
          ${{ steps.docker_meta.outputs.tags }}
          ```
